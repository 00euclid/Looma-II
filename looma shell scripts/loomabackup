#!/bin/bash
#
#  filename: loomabackup
#       VERSION 1.0
#       author: skip
#       date:   JAN 2021
#
#  used to backup looma code, database and content from AWS to Skip's iMac
#  the target iMac folders are also automatically sync'd with Dropbox > 03 Content Reference > 01 Content > D Finished Content > Content on Looma
#    can be called with a parameter "dryrun" in which case the transfers are not performed,
#    configured to be run on a MAC

#RSYNC options used:
#-a  "archive" equivalent to -rlptgoD
#   -r  recursive
#   -l  recreate symlink on the destination
#   -p  preserve permissions
#   -t  preserve modification time
#   -g  preserve group
#   -o  preserve owner
#   -D  transfer devices and specials (NA for Looma)

#-v	    verbose
#-vv	very verbose
#-z  	use compression
#--dry-run
#--delete 	delete files on destination that are not on source
#--size-only  [for Content files, only update if the size has changed, even tho dates may differ]
#--perms (=== -p)
#--update   skip files if destination  already exists and has a later date
#--include '.ssh'
#--exclude '.[!.]*'
#--progress show transfer progress
#--stats    print stats at the end
#
result () {
    if [[ $1 -ne 0 ]]
    then
        echo "****************************************************************"
        echo "ERROR: previous operation returned $1"
    else
        echo "****************************************************************"
        echo "operation successful"
    fi
}

echo "********************************************************"
echo " Looma - backup to MAC"
echo "    syncs new or modified files from AWS (looma.website) to local MAC"
echo "*******************************************************"
echo

cd   "~/Dropbox/Dropbox/Content Reference/01 Content/D Finished Content/Content on Looma"
result $?

if [[ `pwd` != '~/Dropbox/Dropbox/Content Reference/01 Content/D Finished Content/Content on Looma' ]]
    then
        echo
        echo "***********ERROR***********************************"
        echo "  Didnt find target folder on the MAC"
        echo "  Be sure this folder exists: ~/Dropbox/Dropbox/Content Reference/01 Content/D Finished Content/Content on Looma"
        echo "***************************************************"
        exit 1
    fi

mkdir -p Looma     #in case its not already there
mkdir -p content   #in case its not already there

#RO="58191@usw-s008.rsync.net"
RO="looma.website"

echo
echo "**************************************************"
echo "- preparing to backup Looma code"
echo -n  "- - continue [y/n]?"; read input;

if [[ $input = "y" ]]
then
    SECONDS=0
    if [[ $1 = "dryrun" ]]
    then
        rsync -az --dry-run --delete --perms --stats --update --progress --include '.ssh' --exclude '.[!.]*' -e "ssh -i /var/www/html/Looma/.ssh/readonly"   $RO:../Looma/ Looma
        result $?
    else
        rsync -az           --delete --perms --stats --update --progress --include '.ssh' --exclude '.[!.]*' -e "ssh -i /var/www/html/Looma/.ssh/readonly"   $RO:../Looma/ Looma
        result $?
    fi
    echo "$(($SECONDS / 60)) minutes and $(($SECONDS % 60)) seconds elapsed."
fi

echo
echo "*****************************************************"
echo "- preparing to backup Looma content"
echo -n  "- - continue [y/n]?"; read input;

if [[ $input = "y" ]]
then
    SECONDS=0
    if [[ $1 = "dryrun" ]]
    then
        rsync -az --dry-run --size-only --delete --perms --stats --update --progress --include '.ssh' --exclude '.[!.]*' -e "ssh -i /var/www/html/Looma/.ssh/readonly"   $RO:../content/ content
        result $?
    else
        rsync -az --quiet   --size-only --delete --perms --stats --update --progress --include '.ssh' --exclude '.[!.]*' -e "ssh -i /var/www/html/Looma/.ssh/readonly"   $RO:../content/ content
        result $?
    fi
    echo "$(($SECONDS / 60)) minutes and $(($SECONDS % 60)) seconds elapsed."
fi
echo
echo "****************************************************************************"
echo "DONE LOOMA BACKUP: sync'ed Looma code, database and content on AWS to this MAC"
echo "****************************************************************************"
echo
